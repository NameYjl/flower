/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var index = __webpack_require__(1);

//随机验证产生码
index.getNum();
//验证码刷新
$('.yzm').click(function () {
	index.getNum();
});
$('.change').click(function () {
	index.getNum();
});

//转换注册模式    
var flag1 = true;
$('.phone').click(function () {
	if (flag1) {
		$(this).html('使用邮箱注册');

		$('#reg_e').addClass('hide');
		$('#reg_p').removeClass('hide');
		flag1 = !flag1;
	} else {
		$(this).html('使用手机号吗注册');
		$('#reg_p').addClass('hide');
		$('#reg_e').removeClass('hide');
		flag1 = !flag1;
	}
	index.getNum(); //过去随机验证码
	//	let str = index.getCookie('user');
	//let str = index.getCookie('user');
	//	let json_e = JSON.parse(str);
	//	console.log(json_e[0].userpwd)
});

//登录
$('#myform_e').submit(function () {

	var str = index.getCookie('user');
	var json_e = JSON.parse(str);
	//验证邮箱
	if ($('#pname_e').val() == "" || $('#pname_e').val() != json_e[0].username) {
		$('.clear1').css('display', 'block').html('邮箱地址错误或用户名不存在');
		return false;
	}

	//验证密码
	if ($('#pwd_e').val() != json_e[0].userpwd) {
		$('.clear1').css('display', 'block').html('密码错误');
		return false;
	}

	return true;
});

$('#myform_p').submit(function () {
	//	alert()
});

//

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var index = {
	setCookie: function setCookie(key, value, day) {
		if (day) {
			var now = new Date();
			now.setDate(now.getDate() + day);
			document.cookie = key + "=" + value + ";expires=" + now + ";path=/;";
		} else {
			document.cookie = key + "=" + value + ";path=/;";
		}
	},
	//获取cookie
	getCookie: function getCookie(key) {
		var str = document.cookie;
		if (str) {
			//若存在cookie  根据key取对应值
			str = str.replace(/\s/g); //去掉空格
			var arr = str.split(";"); //将字符串拆成数组
			for (var i = 0; i < arr.length; i++) {
				var item = arr[i].split("=");
				if (item[0] == key) {
					return item[1];
				}
			}
			//循环结束后，若没有找到对应的key，返回""
			return "";
		}
		//cookie不存在，返回""
		return "";
	},

	//删除cookie    将key的值设置为""
	removeCookie: function removeCookie(key) {
		index.setCookie(key, "");
	},

	rand: function rand(min, max) {
		return Math.round(Math.random() * (max - min) + min);
	},

	getNum: function getNum() {
		var str = "";
		for (var i = 0; i < 4; i++) {
			str += index.rand(0, 9);
		}
		$('.yzm').html(str);
	}

};

module.exports = index;

/***/ })
/******/ ]);